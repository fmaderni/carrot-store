---
import "../styles/global.css";
import AuthButtons from "../components/AuthButtons.astro";
import CartBadge from "../components/CartBadge.astro";
import CartDrawer from "../components/CartDrawer.astro";

const {
  title: pageTitle = "Carrot",
  description: pageDescription = "Ropa second hand",
} = Astro.props;
---
<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{pageTitle}</title>
    <meta name="description" content={pageDescription} />
    <style is:global>
      body:has(#cart-drawer:target) { overflow: hidden; }
    </style>
  </head>
  <body class="min-h-dvh bg-orange-50 text-stone-900">
    <header class="border-b border-orange-200">
      <div class="max-w-6xl mx-auto px-4 py-3 flex items-center justify-between">
        <a href="/" class="text-2xl font-black">ðŸ¥• Carrot</a>
        <nav class="flex items-center gap-5 text-sm">
          <a href="/catalogo" class="hover:underline">CatÃ¡logo</a>
          <a href="/como-comprar" class="hover:underline">CÃ³mo comprar</a>
          <a href="/contacto" class="hover:underline">Contacto</a>
          <a href="/login" class="rounded-lg border px-3 py-1">Entrar</a>
          <CartBadge />
        </nav>
      </div>
    </header>

    <main class="max-w-6xl mx-auto px-4 py-8">
      <slot />
    </main>

    <footer class="border-t border-orange-200">
      <div class="max-w-6xl mx-auto px-4 py-6 text-sm">
        Â© {new Date().getFullYear()} Carrot â€” Montevideo
      </div>
    </footer>

    <CartDrawer />
    <script is:inline>
  (() => {
    const drawer   = document.getElementById('cart-drawer');
    const backdrop = document.getElementById('cart-backdrop');
    const openBtn  = document.getElementById('cart-badge');  // ahora es <button>
    const closeBtn = document.getElementById('cart-close');

    if (!drawer || !openBtn) return;

    const open = () => {
      drawer.setAttribute('data-open', 'true');
      document.body.classList.add('cart-open');
      openBtn.setAttribute('aria-expanded', 'true');
    };

    const close = () => {
      drawer.removeAttribute('data-open');
      document.body.classList.remove('cart-open');
      openBtn.setAttribute('aria-expanded', 'false');
    };

    openBtn.addEventListener('click', (e) => {
      e.preventDefault();
      open();
    });

    closeBtn?.addEventListener('click', (e) => {
      e.preventDefault();
      close();
    });

    backdrop?.addEventListener('click', close);
    window.addEventListener('keydown', (e) => { if (e.key === 'Escape') close(); });
  })();
</script>
    <script is:inline>
(() => {
  const ready = (fn) =>
    document.readyState !== 'loading'
      ? fn()
      : document.addEventListener('DOMContentLoaded', fn);

  ready(() => {
    const drawer   = document.getElementById('cart-drawer');
    const backdrop = document.getElementById('cart-backdrop');
    if (!drawer) return;

    const open  = () => { drawer.setAttribute('data-open','true');  document.body.classList.add('cart-open'); };
    const close = () => { drawer.removeAttribute('data-open');       document.body.classList.remove('cart-open'); };

    // DelegaciÃ³n global: sirve para <a id="cart-badge"> o <button id="cart-badge">
    document.addEventListener('click', (e) => {
      const openTrigger = e.target.closest('#cart-badge, [data-cart-open], a[href="#cart-drawer"]');
      if (openTrigger) { e.preventDefault(); open(); return; }

      if (e.target.closest('#cart-close, [data-cart-close]')) { e.preventDefault(); close(); return; }
      if (e.target === backdrop) close();
    });

    window.addEventListener('keydown', (e) => { if (e.key === 'Escape') close(); });
  });
})();
</script>

  </body>
</html>
