---
// src/pages/producto/[slug].astro
import BaseLayout from "../../layouts/BaseLayout.astro";
import { createClient } from "@supabase/supabase-js";

const SUPA_URL = import.meta.env.PUBLIC_SUPABASE_URL;
const SUPA_KEY = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
const makeClient = () => createClient(SUPA_URL, SUPA_KEY);

/** Genera /producto/:slug */
export async function getStaticPaths() {
  try {
    if (!SUPA_URL || !SUPA_KEY) return [];
    const { data, error } = await makeClient()
      .from("products")
      .select("slug")
      .eq("is_active", true);

    if (error) {
      console.error("getStaticPaths:", error);
      return [];
    }
    return (data ?? []).map(({ slug }) => ({ params: { slug } }));
  } catch (e) {
    console.error("getStaticPaths exception:", e);
    return [];
  }
}

/** Carga datos del producto */
const { slug } = Astro.params;
let product = null;
let pErr = null;

if (slug && SUPA_URL && SUPA_KEY) {
  const { data, error } = await makeClient()
    .from("products")
    .select("id, slug, name, description, category, size, color, cover_url, image_urls, price")
    .eq("slug", slug)
    .single();
  product = data;
  pErr = error;
}
if (pErr) console.error("product load error:", pErr);

// price puede venir como string (numeric). Lo convertimos seguro:
const priceNumber = product?.price != null ? Number(product.price) : null;
const priceLabel =
  priceNumber != null && !Number.isNaN(priceNumber)
    ? priceNumber.toLocaleString("es-UY", { style: "currency", currency: "UYU", maximumFractionDigits: 0 })
    : "Sin precio";
---

<BaseLayout title={product?.name ?? "Producto"} description={product?.description ?? ""}>
  <section class="mx-auto max-w-6xl px-4 py-10 grid gap-8 md:grid-cols-2">
    <div>
      {product?.cover_url ? (
        <img src={product.cover_url} alt={product?.name} class="rounded-xl border aspect-square object-cover w-full" />
      ) : product?.image_urls?.length ? (
        <img src={product.image_urls[0]} alt={product?.name} class="rounded-xl border aspect-square object-cover w-full" />
      ) : null}
    </div>

    <div class="space-y-4">
      <h1 class="text-3xl font-bold">{product?.name ?? "Producto"}</h1>
      {product?.size && <p class="text-stone-700">Talle: <strong>{product.size}</strong></p>}
      {product?.color && <p class="text-stone-700">Color: {product.color}</p>}
      {product?.description && <p class="text-stone-700">{product.description}</p>}

      <div class="text-2xl font-semibold">{priceLabel}</div>

      {product?.id && (
        <button type="button" class="rounded-lg bg-orange-600 text-white px-5 py-2" data-cart-add data-product-id={product.id}>
          Agregar al carrito
        </button>
      )}
    </div>
  </section>
</BaseLayout>
