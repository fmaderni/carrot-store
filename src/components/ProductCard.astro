---
// src/components/ProductCard.astro
const { product } = Astro.props;

// price puede ser string (numeric). Normalizamos:
const priceNumber = product?.price != null ? Number(product.price) : null;
const priceLabel =
  priceNumber != null && !Number.isNaN(priceNumber)
    ? priceNumber.toLocaleString("es-UY", { style: "currency", currency: "UYU", maximumFractionDigits: 0 })
    : "Sin precio";
---

<article class="rounded-xl border bg-white overflow-hidden flex flex-col">
  <a href={`/producto/${product.slug || product.id}`} class="block">
    {product.cover_url ? (
      <img src={product.cover_url} alt={product.name} class="aspect-square w-full object-cover" />
    ) : product.image_urls?.length ? (
      <img src={product.image_urls[0]} alt={product.name} class="aspect-square w-full object-cover" />
    ) : (
      <div class="aspect-square grid place-items-center bg-stone-100 text-stone-500">Sin imagen</div>
    )}
  </a>

  <div class="p-3 flex-1 flex flex-col gap-1">
    <a class="font-semibold line-clamp-1" href={`/producto/${product.slug}`}>{product.name}</a>
    {product.size && <p class="text-sm text-stone-600">Talle: {product.size}</p>}
    <p class="mt-auto font-semibold">{priceLabel}</p>
    <button
      class="mt-2 rounded-lg bg-orange-600 text-white px-3 py-2"
      data-cart-add
      data-id={product.id}
      data-name={product.name}
      data-price={String(product.price ?? 0)}
      data-size={product.size ?? ""}
      data-image={product.cover_url ?? (product.image_urls?.[0] ?? "")}
      data-slug={product.slug}
      >
      Agregar
    </button>

  </div>
</article>
